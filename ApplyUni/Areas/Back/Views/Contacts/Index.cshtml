@model IEnumerable<ApplyUni.Models.Contact>

@{
    ViewBag.Title = "Contact";
    Layout = "~/Areas/Back/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Contact</h2>

<p>
    @Html.ActionLink("Create New", "Create", "Contacts", null, new { @class = "btn btn-gradient waves-light waves-effect w-md" })
</p>
<div class="card-box table-responsive">
    <table id="datatable-buttons" class="table table-striped table-bordered" cellspacing="0" width="100%">
        <thead>
    <tr>
        <th>
            Firstname
        </th>
        <th>
          Lastname
        </th>
        <th>
          Email
        </th>
        <th>
            Phone
        </th>
        <th>
            Message
        </th>
        <th>
            Topic name
        </th>
        <th></th>
    </tr>
</thead>
@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.firstname)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.lastname)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.phone)
        </td>
        <td>
            @Html.Raw(item.message.Length > 200 ? item.message.Substring(0, 250) : item.message)...
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Topic.topic_name)
        </td>
        <td>
            <button class="btn-outline-** btn btn-light waves-effect w-md">
                @Html.ActionLink("Edit", "Edit", new { id = item.id, @style = "color:black" })
            </button>
            <button class="btn-outline-** btn btn-light waves-effect w-md">
                @Html.ActionLink("Details", "Details", new { id = item.id })
            </button>
            <button class="btn-outline-** btn btn-light waves-effect w-md">
                @Html.ActionLink("Delete", "Delete", new { id = item.id })
            </button>
        </td>
    </tr>
}

</table>
    </div>